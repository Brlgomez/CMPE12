;; initialize the program at 3100
	;;.ORIG 	x3100
	0011 0001 0000 0000

;; Registers
	;;AND 	R0,R0,#0	; clear # of words to count
	0101 000 000 1 00000
	;;ADD	R0,R0,#2	; initialze to 2
	0001 000 000 1 00010
	;;AND 	R1,R1,#0	; clear counter to store number of 1s
	0101 001 001 1 00000
	;;AND	R2,R2,#0	; clear shifter
	0101 010 010 1 00000
	;;ADD 	R2,R2,#1	; intialize shifter to 1
	0001 010 010 1 00001
	;;AND	R3,R3,#0	; temp
	0101 011 011 1 00000
	;;AND 	R4,R4,#0	; clear
	0101 100 100 1 00000	
	;;ADD 	R4,R4,#2	; input 3 to be counted
	0001 100 100 1 00011
	;;AND	R5,R5,#0	; clear
	0101 101 101 1 00000	
	;;ADD	R5,R5,#7	; input 7 to be counted
	0001 101 101 1 00111
	;;AND	R6,R6,#0	; will store current address
	0101 110 110 1 00000
	
;; store words at x3200+n
	;;ST	R4,x3200
	0011 100 011110100
	;;ST	R5,x3201
	0011 101 011110100	
	
	;;LEA	R6,xF5	
	1110 110 011110010	; load address number x3200 into R6
	;;LD	R4,xF5
	0010 100 011110001	; store data x3200 into R4	

	;; LOOP if still words left
	
	;;AND 	R2,R2,#0	; clear R2 shifter
	0101 010 010 1 00000
	;;ADD 	R2,R2,#1
	0001 010 010 1 00001	; intialize shift back to 1 for loop
	
	;; counter if still bits left
	;; WHILE_STILL_ONES	
		;;AND	R3,R4,R2	; store result in the temp
		0101 011 100 0 00 010
		;;BRz	SKIP		; skip increment count if it is zero
		0000 010 000000001
		;;ADD	R1,R1,#1	; increment count
		0001 001 001 1 00001
		;;SKIP	ADD	R2,R2,R2; double right shifter	
		0001 010 010 0 00 010
		;;BRp	WHILE_STILL_ONES; do inner loop again if positive
		0000 001 111111011
	
	;;ADD R6,R6,#1		; increment address x32nn+1
	0001 110 110 1 00001	
	;;LDR R4,R6		; load data into R4
	0110 100 110 000000
	;;ADD R0,R0,#-1		; decrement words left
	0001 000 000 1 11111	
	;;BRp	LOOP		; if still words left do outer loop again
	0000 001 111110101
	
	;;ST R1
	0011 001 111100110	; store counter into x3101
	;;.END
	;; TRAP x25		; stop the processor
	1111 0000 00100101